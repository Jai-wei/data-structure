以下链表暂未实现代码---

### 循环链表
	・最后一个节点的后继指针指向第一个节点or头结点
	・对于循环单链表，只要给定一个节点P，一定能找到所有节点
	・如果经常要对表头和表尾进行操作，可以直接让L指向表尾
	・创建链表：L.next = L
	・判空：L.next = L
	・判断表尾：p.next = L


### 循环双链表
	・初始化：L的头、后指针都指向L
	・判空：L.next = L
	・判断是否为循环双链表：p.next = L
	・后插入节点：不需要再判定尾部null
	・删除节点：不需要再判定尾部null


### 静态链表（已实现部分）
	・静态链表类似于一个数组，每个数据元素前面存储值，后面存储游标（类似于指针地址）
	・最后一个节点游标的值可以设置为-1
	・头结点地址为addr，e1（存放在位置2）的地址为 addr + 8*2
	・代码中创建结构体需要理解一下~
	・要懂逻辑，此处略！


### A顺序表与B链表的对比
	・逻辑结构：都属于线性结构
	・存储结构：A顺序存储，只需要存储本身，存储密度高，支持随机存取；大片连续空间分配不方便，改变容量不方便
				B链表，离散的小空间分配方便，改变容量方便；不可随机读取，需要存储指针-存储密度低
	・基本操作：
		・懒得打字，略……
